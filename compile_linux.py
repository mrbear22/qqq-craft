#!/usr/bin/env python3
"""
QQQ-CRAFT LAUNCHER DEB PACKAGE BUILDER
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è DEB –ø–∞–∫–µ—Ç—É –∑ –ª–∞—É–Ω—á–µ—Ä–∞ Minecraft
"""

import os
import sys
import shutil
import subprocess
import tempfile
import zipfile
from pathlib import Path
from datetime import datetime

class DebPackageBuilder:
    def __init__(self):
        self.app_name = "qqq-craft-launcher"
        self.app_version = "1.0.24.0"
        self.app_description = "QQQ-CRAFT Minecraft Launcher"
        self.app_maintainer = "QQQ-CRAFT Team <support@qqq-craft.top>"
        self.app_homepage = "https://qqq-craft.top"
        
        # –ü–æ—Ç–æ—á–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –∑ –≤–∏—Ö—ñ–¥–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
        self.source_dir = Path.cwd()
        self.build_dir = self.source_dir / "build"
        self.dist_dir = self.source_dir / "dist"
        
        # –§–∞–π–ª–∏ —â–æ –º–∞—é—Ç—å –±—É—Ç–∏ –≤–∫–ª—é—á–µ–Ω—ñ
        self.required_files = [
            "paste.txt",  # –û—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª –ª–∞—É–Ω—á–µ—Ä–∞
            "templates/",  # HTML —à–∞–±–ª–æ–Ω–∏ (—è–∫—â–æ —ñ—Å–Ω—É—é—Ç—å)
            "static/",     # –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏ (—è–∫—â–æ —ñ—Å–Ω—É—é—Ç—å)
        ]
        
    def check_dependencies(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"""
        print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PyInstaller
        try:
            subprocess.run(["pyinstaller", "--version"], 
                         check=True, capture_output=True)
            print("‚úÖ PyInstaller –∑–Ω–∞–π–¥–µ–Ω–æ")
        except (subprocess.CalledProcessError, FileNotFoundError):
            print("‚ùå PyInstaller –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—é...")
            subprocess.run([sys.executable, "-m", "pip", "install", "pyinstaller"], 
                         check=True)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ dpkg-deb
        try:
            subprocess.run(["dpkg-deb", "--version"], 
                         check=True, capture_output=True)
            print("‚úÖ dpkg-deb –∑–Ω–∞–π–¥–µ–Ω–æ")
        except (subprocess.CalledProcessError, FileNotFoundError):
            print("‚ùå dpkg-deb –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: sudo apt install dpkg-dev")
            return False
        
        return True
    
    def prepare_build_dirs(self):
        """–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –¥–ª—è –∑–±—ñ—Ä–∫–∏"""
        print("üìÅ –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π...")
        
        # –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∑–±—ñ—Ä–æ–∫
        if self.build_dir.exists():
            shutil.rmtree(self.build_dir)
        if self.dist_dir.exists():
            shutil.rmtree(self.dist_dir)
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
        self.build_dir.mkdir(parents=True)
        self.dist_dir.mkdir(parents=True)
        
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ")
    
    def create_executable(self):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏–∫–æ–Ω—É–≤–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é PyInstaller"""
        print("üî® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏–∫–æ–Ω—É–≤–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É...")
        
        # –ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª—É –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
        main_script = self.source_dir / "launcher.py"
        if not main_script.exists():
            shutil.copy(self.source_dir / "paste.txt", main_script)
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è spec —Ñ–∞–π–ª—É –¥–ª—è PyInstaller
        spec_content = f'''
# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['launcher.py'],
    pathex=['{self.source_dir}'],
    binaries=[],
    datas=[
        ('templates', 'templates'),
        ('static', 'static'),
    ],
    hiddenimports=[
        'flask', 'requests', 'minecraft_launcher_lib', 
        'packaging', 'tkinter', 'webview', 'websockets',
        'markdown', 'hashlib'
    ],
    hookspath=[],
    hooksconfig={{}},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='{self.app_name}',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)

coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='{self.app_name}',
)
'''
        
        spec_file = self.source_dir / f"{self.app_name}.spec"
        with open(spec_file, 'w', encoding='utf-8') as f:
            f.write(spec_content)
        
        # –ó–∞–ø—É—Å–∫ PyInstaller
        try:
            subprocess.run([
                "pyinstaller", 
                "--clean",
                "--noconfirm",
                str(spec_file)
            ], check=True)
            print("‚úÖ –í–∏–∫–æ–Ω—É–≤–∞–Ω–∏–π —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ")
            return True
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ PyInstaller: {e}")
            return False
        finally:
            # –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
            if main_script.exists() and main_script.name == "launcher.py":
                main_script.unlink()
            if spec_file.exists():
                spec_file.unlink()
    
    def create_deb_structure(self):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ DEB –ø–∞–∫–µ—Ç—É"""
        print("üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ DEB –ø–∞–∫–µ—Ç—É...")
        
        # –û—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–∫–µ—Ç—É
        pkg_dir = self.build_dir / f"{self.app_name}_{self.app_version}"
        
        # –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø–∞–∫–µ—Ç—É
        debian_dir = pkg_dir / "DEBIAN"
        usr_dir = pkg_dir / "usr"
        bin_dir = usr_dir / "bin"
        share_dir = usr_dir / "share"
        app_dir = share_dir / self.app_name
        applications_dir = share_dir / "applications"
        icons_dir = share_dir / "pixmaps"
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
        for directory in [debian_dir, bin_dir, app_dir, applications_dir, icons_dir]:
            directory.mkdir(parents=True, exist_ok=True)
        
        return pkg_dir, debian_dir, app_dir, bin_dir, applications_dir, icons_dir
    
    def copy_application_files(self, app_dir):
        """–ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–≥—Ä–∞–º–∏"""
        print("üìã –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–≥—Ä–∞–º–∏...")
        
        # –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –≤–∏–∫–æ–Ω—É–≤–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É —Ç–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        dist_app_dir = self.source_dir / "dist" / self.app_name
        if dist_app_dir.exists():
            for item in dist_app_dir.iterdir():
                if item.is_file():
                    shutil.copy2(item, app_dir)
                elif item.is_dir():
                    shutil.copytree(item, app_dir / item.name, dirs_exist_ok=True)
        
        # –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
        for resource in ["templates", "static"]:
            src_path = self.source_dir / resource
            if src_path.exists():
                dst_path = app_dir / resource
                if src_path.is_file():
                    shutil.copy2(src_path, dst_path)
                else:
                    shutil.copytree(src_path, dst_path, dirs_exist_ok=True)
        
        print("‚úÖ –§–∞–π–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ")
    
    def create_launcher_script(self, bin_dir, app_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É –∑–∞–ø—É—Å–∫—É"""
        print("üöÄ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É –∑–∞–ø—É—Å–∫—É...")
        
        launcher_script = f'''#!/bin/bash
# QQQ-CRAFT Launcher Startup Script

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
export QQQ_CRAFT_HOME="/usr/share/{self.app_name}"
export PATH="$QQQ_CRAFT_HOME:$PATH"

# –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–≥—Ä–∞–º–∏
cd "$QQQ_CRAFT_HOME"

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
exec "./{self.app_name}" "$@"
'''
        
        script_path = bin_dir / self.app_name
        with open(script_path, 'w', encoding='utf-8') as f:
            f.write(launcher_script)
        
        # –ù–∞–¥–∞–Ω–Ω—è –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        script_path.chmod(0o755)
        
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    def create_desktop_entry(self, applications_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è .desktop —Ñ–∞–π–ª—É"""
        print("üñ•Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è desktop —Ñ–∞–π–ª—É...")
        
        desktop_content = f'''[Desktop Entry]
Version=1.0
Type=Application
Name=QQQ-CRAFT Launcher
Name[uk]=QQQ-CRAFT –õ–∞—É–Ω—á–µ—Ä
Comment=Minecraft Launcher for QQQ-CRAFT Server
Comment[uk]=–õ–∞—É–Ω—á–µ—Ä Minecraft –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ QQQ-CRAFT
GenericName=Game Launcher
GenericName[uk]=–Ü–≥—Ä–æ–≤–∏–π –ª–∞—É–Ω—á–µ—Ä
Exec={self.app_name}
Icon={self.app_name}
Terminal=false
StartupNotify=true
Categories=Game;ActionGame;
Keywords=minecraft;game;launcher;qqq;craft;
StartupWMClass=QQQ-CRAFT-Launcher
'''
        
        desktop_file = applications_dir / f"{self.app_name}.desktop"
        with open(desktop_file, 'w', encoding='utf-8') as f:
            f.write(desktop_content)
        
        desktop_file.chmod(0o644)
        print("‚úÖ Desktop —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    def create_icon(self, icons_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ (placeholder)"""
        print("üé® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏...")
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ—ó SVG —ñ–∫–æ–Ω–∫–∏ —è–∫ –∑–∞–≥–ª—É—à–∫–∞
        svg_content = '''<?xml version="1.0" encoding="UTF-8"?>
<svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
    <rect width="64" height="64" fill="#4CAF50" rx="8"/>
    <text x="32" y="40" font-family="Arial, sans-serif" font-size="24" 
          font-weight="bold" text-anchor="middle" fill="white">Q</text>
</svg>'''
        
        icon_file = icons_dir / f"{self.app_name}.svg"
        with open(icon_file, 'w', encoding='utf-8') as f:
            f.write(svg_content)
        
        print("‚úÖ –Ü–∫–æ–Ω–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –≤–ª–∞—Å–Ω—É –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –≤–∏–≥–ª—è–¥—É)")
    
    def create_control_file(self, debian_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è control —Ñ–∞–π–ª—É"""
        print("üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è control —Ñ–∞–π–ª—É...")
        
        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–æ–∑–º—ñ—Ä—É –ø–∞–∫–µ—Ç—É
        pkg_size = self.calculate_package_size()
        
        control_content = f'''Package: {self.app_name}
Version: {self.app_version}
Section: games
Priority: optional
Architecture: amd64
Depends: python3 (>= 3.8), python3-tk, python3-pip, libwebkit2gtk-4.0-37
Maintainer: {self.app_maintainer}
Homepage: {self.app_homepage}
Installed-Size: {pkg_size}
Description: {self.app_description}
 QQQ-CRAFT Launcher - –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –ª–∞—É–Ω—á–µ—Ä –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ QQQ-CRAFT.
 .
 –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:
  * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–¥–ø–∞–∫—ñ–≤
  * –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ Fabric —Ç–∞ Forge
  * –Ü–Ω—Ç—É—ó—Ç–∏–≤–Ω–∏–π –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
  * –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ä—ñ–∑–Ω–∏—Ö –≤–µ—Ä—Å—ñ–π Minecraft
'''
        
        control_file = debian_dir / "control"
        with open(control_file, 'w', encoding='utf-8') as f:
            f.write(control_content)
        
        print("‚úÖ Control —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    def create_postinst_script(self, debian_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è post-installation —Å–∫—Ä–∏–ø—Ç—É"""
        print("‚öôÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è post-install —Å–∫—Ä–∏–ø—Ç—É...")
        
        postinst_content = f'''#!/bin/bash
set -e

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è desktop database
if command -v update-desktop-database > /dev/null 2>&1; then
    update-desktop-database -q /usr/share/applications
fi

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è mime database
if command -v update-mime-database > /dev/null 2>&1; then
    update-mime-database /usr/share/mime
fi

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
if command -v pip3 > /dev/null 2>&1; then
    pip3 install --user flask requests minecraft-launcher-lib packaging webview websockets markdown
fi

echo "QQQ-CRAFT Launcher –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
echo "–ó–∞–ø—É—Å—Ç—ñ—Ç—å —á–µ—Ä–µ–∑ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º –∞–±–æ –∫–æ–º–∞–Ω–¥–æ—é: {self.app_name}"

exit 0
'''
        
        postinst_file = debian_dir / "postinst"
        with open(postinst_file, 'w', encoding='utf-8') as f:
            f.write(postinst_content)
        
        postinst_file.chmod(0o755)
        print("‚úÖ Post-install —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    def create_prerm_script(self, debian_dir):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-removal —Å–∫—Ä–∏–ø—Ç—É"""
        print("üóëÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-removal —Å–∫—Ä–∏–ø—Ç—É...")
        
        prerm_content = '''#!/bin/bash
set -e

echo "–í–∏–¥–∞–ª–µ–Ω–Ω—è QQQ-CRAFT Launcher..."

# –ó—É–ø–∏–Ω–∫–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤ –ª–∞—É–Ω—á–µ—Ä–∞
pkill -f "qqq-craft-launcher" 2>/dev/null || true

exit 0
'''
        
        prerm_file = debian_dir / "prerm"
        with open(prerm_file, 'w', encoding='utf-8') as f:
            f.write(prerm_content)
        
        prerm_file.chmod(0o755)
        print("‚úÖ Pre-removal —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    def calculate_package_size(self):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–æ–∑–º—ñ—Ä—É –ø–∞–∫–µ—Ç—É –≤ KB"""
        total_size = 0
        
        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–æ–∑–º—ñ—Ä—É dist –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
        dist_dir = self.source_dir / "dist" / self.app_name
        if dist_dir.exists():
            for file_path in dist_dir.rglob('*'):
                if file_path.is_file():
                    total_size += file_path.stat().st_size
        
        return max(1024, total_size // 1024)  # –ú—ñ–Ω—ñ–º—É–º 1MB
    
    def build_deb_package(self, pkg_dir):
        """–ó–±—ñ—Ä–∫–∞ DEB –ø–∞–∫–µ—Ç—É"""
        print("üîß –ó–±—ñ—Ä–∫–∞ DEB –ø–∞–∫–µ—Ç—É...")
        
        deb_filename = f"{self.app_name}_{self.app_version}_amd64.deb"
        deb_path = self.dist_dir / deb_filename
        
        try:
            # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
            for root, dirs, files in os.walk(pkg_dir):
                for directory in dirs:
                    os.chmod(os.path.join(root, directory), 0o755)
                for file in files:
                    file_path = os.path.join(root, file)
                    if file in ['postinst', 'prerm', 'postrm', 'preinst']:
                        os.chmod(file_path, 0o755)
                    else:
                        os.chmod(file_path, 0o644)
            
            # –ó–±—ñ—Ä–∫–∞ –ø–∞–∫–µ—Ç—É
            subprocess.run([
                "dpkg-deb", 
                "--build", 
                "--root-owner-group",
                str(pkg_dir), 
                str(deb_path)
            ], check=True)
            
            print(f"‚úÖ DEB –ø–∞–∫–µ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ: {deb_path}")
            return deb_path
            
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±—ñ—Ä–∫–∏ DEB –ø–∞–∫–µ—Ç—É: {e}")
            return None
    
    def validate_package(self, deb_path):
        """–í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –ø–∞–∫–µ—Ç—É"""
        print("üîç –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞–∫–µ—Ç—É...")
        
        try:
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–∞–∫–µ—Ç—É
            result = subprocess.run([
                "dpkg-deb", "--contents", str(deb_path)
            ], capture_output=True, text=True, check=True)
            
            print("üìã –í–º—ñ—Å—Ç –ø–∞–∫–µ—Ç—É:")
            print(result.stdout)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–∏—Ö
            result = subprocess.run([
                "dpkg-deb", "--info", str(deb_path)
            ], capture_output=True, text=True, check=True)
            
            print("‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–∞–∫–µ—Ç:")
            print(result.stdout)
            
            return True
            
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó: {e}")
            return False
    
    def cleanup(self):
        """–û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤"""
        print("üßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤...")
        
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è build –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
        if self.build_dir.exists():
            shutil.rmtree(self.build_dir)
        
        # –û—á–∏—â–µ–Ω–Ω—è PyInstaller —Ñ–∞–π–ª—ñ–≤
        for path in self.source_dir.glob("*.spec"):
            path.unlink()
        
        build_dir = self.source_dir / "build"
        if build_dir.exists():
            shutil.rmtree(build_dir)
        
        print("‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    
    def build(self):
        """–û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–±—ñ—Ä–∫–∏"""
        print("üöÄ –ü–æ—á–∞—Ç–æ–∫ –∑–±—ñ—Ä–∫–∏ DEB –ø–∞–∫–µ—Ç—É QQQ-CRAFT Launcher")
        print(f"üì¶ –í–µ—Ä—Å—ñ—è: {self.app_version}")
        print("=" * 50)
        
        try:
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
            if not self.check_dependencies():
                return False
            
            # –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
            self.prepare_build_dirs()
            
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏–∫–æ–Ω—É–≤–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É
            if not self.create_executable():
                return False
            
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–∞–∫–µ—Ç—É
            pkg_dir, debian_dir, app_dir, bin_dir, applications_dir, icons_dir = self.create_deb_structure()
            
            # –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
            self.copy_application_files(app_dir)
            self.create_launcher_script(bin_dir, app_dir)
            self.create_desktop_entry(applications_dir)
            self.create_icon(icons_dir)
            
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –ø–∞–∫–µ—Ç—É
            self.create_control_file(debian_dir)
            self.create_postinst_script(debian_dir)
            self.create_prerm_script(debian_dir)
            
            # –ó–±—ñ—Ä–∫–∞ –ø–∞–∫–µ—Ç—É
            deb_path = self.build_deb_package(pkg_dir)
            if not deb_path:
                return False
            
            # –í–∞–ª—ñ–¥–∞—Ü—ñ—è
            if not self.validate_package(deb_path):
                return False
            
            # –û—á–∏—â–µ–Ω–Ω—è
            self.cleanup()
            
            print("=" * 50)
            print("üéâ –ó–±—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
            print(f"üì¶ –ü–∞–∫–µ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {deb_path}")
            print(f"üìè –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: {deb_path.stat().st_size / 1024 / 1024:.1f} MB")
            print()
            print("üìã –î–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–π—Ç–µ:")
            print(f"   sudo dpkg -i {deb_path}")
            print("   sudo apt-get install -f  # —è–∫—â–æ –≤–∏–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–æ–±–ª–µ–º–∏ –∑ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏")
            print()
            print("üöÄ –î–ª—è –∑–∞–ø—É—Å–∫—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è:")
            print(f"   {self.app_name}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
            return False


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    builder = DebPackageBuilder()
    
    try:
        success = builder.build()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ó–±—ñ—Ä–∫–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()